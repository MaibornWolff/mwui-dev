{"version":3,"names":["attachComponent","async","delegate","container","attachViewToDom","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","CoreDelegate","BaseComponent","Reference","root","firstElementChild","classList","contains","el","_a","ownerDocument","createElement","add","append","Array","from","children","appendChild","app","document","body","createComment","parentNode","insertBefore","ModalSizeEnum","mwModalCss","MwModal","this","animationDuration","configureTriggerInteraction","trigger","destroyTriggerInteraction","triggerElement","modalEl","openModal","present","addEventListener","removeEventListener","getTriggerElement","configureDismissTriggerInteraction","dismissTrigger","destroyDismissTriggerInteraction","dismissModal","dismiss","handleDismiss","DEFAULT","onTriggerChange","onDismissTriggerChange","onIsOpenChange","newValue","oldValue","componentDidLoad","isOpen","connectedCallback","disconnectedCallback","triggerId","getElementById","runPresentAnimation","overlayHidden","setTimeout","runDismissAnimation","dismissAnimationRunning","modalIsOpen","modalContentElement","render","h","Host","class","onBackdropClick","onIconClick","part","backdropDismiss","size"],"sources":["./src/utils/delegate.ts","./src/components/mw-modal/models/enums/modal-size.enum.ts","./src/components/mw-modal/mw-modal.scss?tag=mw-modal&encapsulation=shadow","./src/components/mw-modal/mw-modal.tsx"],"sourcesContent":["export const attachComponent = async (delegate: any | undefined, container: HTMLElement): Promise<HTMLElement> => {\n  if (delegate) {\n    return delegate.attachViewToDom(container);\n  }\n};\n\nexport const detachComponent = (delegate: any | undefined, element: HTMLElement | undefined) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport const CoreDelegate = () => {\n  let BaseComponent: HTMLElement;\n  let Reference: Comment;\n\n  const attachViewToDom = async (parentElement: HTMLElement) => {\n    BaseComponent = parentElement;\n\n    const root = BaseComponent.firstElementChild as HTMLElement;\n\n    if (!root.classList.contains(\"mw-teleport-container\")) {\n      const el = BaseComponent.ownerDocument?.createElement(\"div\");\n      el.classList.add(\"mw-teleport-container\");\n\n      el.append(...Array.from(BaseComponent.children));\n      BaseComponent.appendChild(el);\n    }\n\n    const app = document.body; // @TODO: add custom anchor element\n\n    Reference = document.createComment(\"mwui-anchor-comment\");\n    BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n\n    app.appendChild(BaseComponent);\n\n    return BaseComponent;\n  };\n\n  const removeViewFromDom = (): Promise<void> => {\n    if (BaseComponent && Reference) {\n      Reference.parentNode?.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n    return Promise.resolve();\n  };\n\n  return { attachViewToDom, removeViewFromDom };\n};\n","export enum ModalSizeEnum {\n  DEFAULT = \"default\",\n  SMALL = \"small\",\n}\n\nexport type ModalSize = `${ModalSizeEnum}`;\n","@use \"theme/mixins/box-shadow\";\n\n:host {\n  display: block;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.mw-modal {\n  $animation-duration: 0.33s;\n\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  contain: strict;\n  z-index: 999999;\n\n  &.dismiss-animation {\n    .mw-modal__backdrop {\n      animation: fadeOut $animation-duration cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n    }\n\n    .mw-modal__wrapper {\n      animation: scaleDown $animation-duration cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n    }\n  }\n  &__backdrop {\n    animation: fadeIn $animation-duration cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n  }\n\n  &__wrapper {\n    @include box-shadow.box-shadow(\"--mw-component-modal-shadow-default\");\n\n    z-index: 1;\n    margin-top: var(--mw-component-modal-margin-t);\n    margin-left: var(--mw-component-modal-margin-x);\n    margin-right: var(--mw-component-modal-margin-x);\n    background: var(--mw-component-modal-bg-default);\n    border-radius: var(--mw-component-modal-border-radius);\n    padding: var(--mw-component-modal-padding-components-x-default) var(--mw-component-modal-padding-components-x-default);\n    animation: scaleUp $animation-duration cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n\n    &--default {\n      max-width: var(--mw-component-size-modal-default-w);\n    }\n\n    &--small {\n      max-width: var(--mw-component-size-modal-small-w);\n    }\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0.4;\n  }\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes scaleUp {\n  0% {\n    transform: scale(0.8) translateY(100px);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1) translateY(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes scaleDown {\n  0% {\n    transform: scale(1) translateY(0px);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(0.8) translateY(100px);\n    opacity: 0;\n  }\n}\n","import { Component, Element, h, Host, Method, Prop, State, Watch } from \"@stencil/core\";\nimport { attachComponent, CoreDelegate, detachComponent } from \"../../utils/delegate\";\nimport { ModalSize, ModalSizeEnum } from \"./models/enums/modal-size.enum\";\n\n@Component({\n  tag: \"mw-modal\",\n  styleUrl: \"mw-modal.scss\",\n  shadow: true,\n})\nexport class MwModal {\n  private modalContentElement?: HTMLElement;\n  private delegate = CoreDelegate();\n  private animationDuration = 300;\n  private destroyTriggerInteraction?: () => void;\n  private destroyDismissTriggerInteraction?: () => void;\n\n  @State() private dismissAnimationRunning = false;\n  @State() private overlayHidden = true;\n  @State() private modalIsOpen = false;\n\n  @Element() private el!: HTMLMwModalElement;\n\n  /**\n   * Determines wether or not backdrop should dismiss modal\n   */\n  @Prop() backdropDismiss = true;\n\n  /**\n   * Determines the max size that the modal takes horizontally\n   */\n  @Prop() size: ModalSize = ModalSizeEnum.DEFAULT;\n\n  /**\n   * id used to present the modal\n   */\n  @Prop() trigger?: string | undefined;\n  @Watch(\"trigger\")\n  onTriggerChange(): void {\n    this.configureTriggerInteraction();\n  }\n\n  /**\n   * id used to dismiss the modal\n   */\n  @Prop() dismissTrigger?: string | undefined;\n  @Watch(\"trigger\")\n  onDismissTriggerChange(): void {\n    this.configureDismissTriggerInteraction();\n  }\n\n  /**\n   * Modal can be opened closed with this input property\n   */\n  @Prop() isOpen = false;\n  @Watch(\"isOpen\")\n  onIsOpenChange(newValue: boolean, oldValue: boolean): void {\n    if (newValue === true && oldValue === false) {\n      this.present();\n    } else if (newValue === false && oldValue === true) {\n      this.dismiss();\n    }\n  }\n\n  componentDidLoad(): void {\n    if (this.isOpen === true) {\n      this.present();\n    }\n  }\n\n  connectedCallback(): void {\n    this.configureTriggerInteraction();\n    this.configureDismissTriggerInteraction();\n  }\n\n  disconnectedCallback(): void {\n    const { destroyTriggerInteraction, destroyDismissTriggerInteraction } = this;\n\n    if (destroyTriggerInteraction) {\n      destroyTriggerInteraction();\n    }\n\n    if (destroyDismissTriggerInteraction) {\n      destroyDismissTriggerInteraction();\n    }\n  }\n\n  private configureTriggerInteraction = (): void => {\n    const { trigger, el, destroyTriggerInteraction } = this;\n    if (destroyTriggerInteraction) {\n      destroyTriggerInteraction();\n    }\n\n    if (!trigger) {\n      return;\n    }\n\n    const configureTriggerInteraction = (triggerElement: HTMLElement, modalEl: HTMLMwModalElement): (() => void) => {\n      const openModal = (): void => {\n        modalEl.present();\n      };\n\n      triggerElement.addEventListener(\"click\", openModal);\n\n      return () => {\n        triggerElement.removeEventListener(\"click\", openModal);\n      };\n    };\n\n    this.destroyTriggerInteraction = configureTriggerInteraction(this.getTriggerElement(trigger), el);\n  };\n\n  private configureDismissTriggerInteraction = () => {\n    const { dismissTrigger, el, destroyDismissTriggerInteraction } = this;\n\n    if (destroyDismissTriggerInteraction) {\n      destroyDismissTriggerInteraction();\n    }\n\n    if (!dismissTrigger) {\n      return;\n    }\n\n    const configureDismissTriggerInteraction = (triggerElement: HTMLElement, modalEl: HTMLMwModalElement): (() => void) => {\n      const dismissModal = (): void => {\n        modalEl.dismiss();\n      };\n\n      triggerElement.addEventListener(\"click\", dismissModal);\n\n      return (): void => {\n        triggerElement.removeEventListener(\"click\", dismissModal);\n      };\n    };\n\n    this.destroyDismissTriggerInteraction = configureDismissTriggerInteraction(this.getTriggerElement(dismissTrigger), el);\n  };\n\n  private getTriggerElement(triggerId: string): HTMLElement | null {\n    return triggerId ? document.getElementById(triggerId) : null;\n  }\n\n  private runPresentAnimation(): Promise<void> {\n    this.overlayHidden = false;\n\n    return new Promise(resolve =>\n      setTimeout(() => {\n        resolve();\n      }, this.animationDuration),\n    );\n  }\n\n  private runDismissAnimation(): Promise<void> {\n    this.dismissAnimationRunning = true;\n\n    return new Promise(resolve =>\n      setTimeout(() => {\n        this.overlayHidden = true;\n        this.dismissAnimationRunning = false;\n        resolve();\n      }, this.animationDuration),\n    );\n  }\n\n  /**\n   * Method to present the modal\n   */\n  @Method()\n  async present(): Promise<void> {\n    const { delegate, el } = this;\n    if (this.modalIsOpen) {\n      return;\n    }\n\n    this.modalContentElement = await attachComponent(delegate, el);\n    await this.runPresentAnimation();\n    this.modalIsOpen = true;\n  }\n\n  /**\n   * Method to dismiss the modal\n   */\n  @Method()\n  async dismiss(): Promise<void> {\n    const { delegate } = this;\n\n    if (!this.modalIsOpen) {\n      return;\n    }\n\n    await this.runDismissAnimation();\n    await detachComponent(delegate, this.modalContentElement);\n    this.modalIsOpen = false;\n  }\n\n  private handleDismiss = (): void => {\n    this.dismiss();\n  };\n\n  render() {\n    return (\n      <Host\n        class={{\n          \"overlay-hidden\": this.overlayHidden,\n        }}\n        onBackdropClick={this.handleDismiss}\n        onIconClick={this.handleDismiss}\n      >\n        <div\n          class={{\n            \"mw-modal\": true,\n            \"dismiss-animation\": this.dismissAnimationRunning,\n          }}\n        >\n          <mw-backdrop class=\"mw-modal__backdrop\" part=\"backdrop\" backdropDismiss={this.backdropDismiss} />\n          <div class={`mw-modal__wrapper mw-modal__wrapper--${this.size}`} part=\"content\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}