/*! For license information please see components-mw-modal-mw-modal-stories.13b17641.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_maibornwolff_mwui_stencil=self.webpackChunk_maibornwolff_mwui_stencil||[]).push([[7563],{"../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"../node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dx:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Dx,Ed:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed,QE:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.QE,VZ:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.VZ,Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,c6:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.c6,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("../node_modules/@storybook/addon-docs/dist/chunk-PCJTTTQV.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../node_modules/@storybook/blocks/dist/index.mjs")},"./src/components/mw-modal/mw-modal.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,IsOpenModal:()=>IsOpenModal,ModalFooter:()=>ModalFooter,ModalTitle:()=>ModalTitle,NotificationModal:()=>NotificationModal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>mw_modal_stories});__webpack_require__("../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../node_modules/@storybook/addon-docs/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({p:"p",pre:"pre",code:"code",h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.Dx,{children:"Modal"}),"\n",(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"10px",flexWrap:"wrap",justifyContent:"space-between"},children:[(0,jsx_runtime.jsxs)("div",{style:{width:"50%"},children:[(0,jsx_runtime.jsx)(dist.QE,{children:(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)("code",{children:"mw-modal"})," component provides a host element to display content as a modal popup."]})}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:(0,jsx_runtime.jsx)("a",{href:"#modal-title",children:"mw-modal-title"})}),(0,jsx_runtime.jsx)("li",{children:(0,jsx_runtime.jsx)("a",{href:"#modal-footer",children:"mw-modal-footer"})})]})]}),(0,jsx_runtime.jsx)("div",{style:{width:"40%"},children:(0,jsx_runtime.jsx)(dist.oG,{of:NotificationModal})})]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'  <mw-button\n      id="open-modal"\n      label="Open Modal"\n  ></mw-button>\n  <mw-modal\n    trigger="open-modal" // id of the trigger element that opens the modal\n    dismiss-trigger="close-icon" // id of the trigger element that dismisses the modal\n    backdrop-dismiss="false"\n    size="default"\n  >\n      <mw-modal-title headline="{headline}" description="{description}">\n          <mw-icon icon="close" id="close-icon" size="medium" slot="icon"></mw-icon>\n      </mw-modal-title>\n\n      <div>\n          all of the modal content\n      </div>\n      <mw-modal-footer>\n          <span slot="end">\n            <mw-button label="Action 1" variant="ghost"></mw-button>\n            <mw-button label="Action 2"></mw-button>\n          </span>\n      </mw-modal-footer>\n  </mw-modal>\n'})}),"\n",(0,jsx_runtime.jsx)(dist.Ed,{of:"mw-modal"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"modal-title",children:"Modal Title"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{of:ModalTitle,withToolbar:!0,sourceState:"shown",additionalActions:[{title:"Open in GitHub",onClick:()=>{window.open("https://github.com/MaibornWolff/mwui/tree/main/mwui-stencil/src/components/mw-modal","_blank")}}]}),"\n",(0,jsx_runtime.jsx)(dist.Ed,{of:"mw-modal-title"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"modal-footer",children:"Modal Footer"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{of:ModalFooter,sourceState:"shown"})]})}const mw_modal_docs=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)};let ModalSizeEnum=function(ModalSizeEnum){return ModalSizeEnum.DEFAULT="default",ModalSizeEnum.SMALL="small",ModalSizeEnum}({});const mw_modal_stories={title:"Components/Modal",component:"mw-modal",tags:["autodocs"],parameters:{docs:{page:mw_modal_docs}}},Default=(args=>`\n<div>\n    <mw-button\n        id="open-default-modal"\n        label="Open Modal"\n      ></mw-button>\n    <mw-modal\n      trigger="open-default-modal"\n      dismiss-trigger="dismiss-default-modal"\n      backdrop-dismiss="${args.backdropDismiss}"\n      size="${args.size}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-default-modal" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n\n        <div style="display: flex; justify-content: center; align-items: center; background: #C8EBFD; flex-direction: column; height: 200px">\n            <h3 style="font-weight: bold; text-align: center; margin: 0; margin-bottom: 12px;">Slot</h3>\n            <p style="text-align: center; margin: 4px;">This is a placeholder component</p>\n            <p style="text-align: center; margin: 4px;">Replace with your component</p>\n        </div>\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Action 1" variant="ghost"></mw-button>\n              <mw-button label="Action 2"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`).bind({});Default.args={icon:"close",headline:"Title",backdropDismiss:!0,description:"A dialog is a type of modal window that appears in front of app content to provide critical information, or prompt for a decision to be made.",size:ModalSizeEnum.DEFAULT};const ModalTitle=(args=>`\n<div>\n    <mw-button\n        id="open-modal-title"\n        label="Open Modal with Title"\n      ></mw-button>\n    <mw-modal\n      trigger="open-modal-title"\n      dismiss-trigger="dismiss-modal-title"\n      backdrop-dismiss="${args.backdropDismiss}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-modal-title" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n    </mw-modal>\n</div>`).bind({});ModalTitle.args={icon:"close",headline:"Title",backdropDismiss:!0,description:"A dialog is a type of modal window that appears in front of app content to provide critical information, or prompt for a decision to be made."};const ModalFooter=(args=>`\n<div>\n    <mw-button\n        id="open-modal-footer"\n        label="Open Modal with footer"\n      ></mw-button>\n    <mw-modal\n      trigger="open-modal-footer"\n      dismiss-trigger="dismiss-modal-footer"\n      backdrop-dismiss="${args.backdropDismiss}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-modal-footer" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n        <mw-modal-footer>\n            <span slot="start">\n              <mw-button label="Action 1"></mw-button>\n              <mw-button label="Action 2" variant="ghost"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`).bind({});ModalFooter.args={icon:"close",headline:"Title",backdropDismiss:!0,description:"A dialog is a type of modal window that appears in front of app content to provide critical information, or prompt for a decision to be made."};const NotificationModal=(args=>`\n<div>\n    <mw-button id="open-notification-modal" label="Open Modal"></mw-button>\n    <mw-modal trigger="open-notification-modal">\n        <mw-modal-title headline="${args.headline}" description="${args.description}"></mw-modal-title>\n\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Not now" variant="ghost"></mw-button>\n              <mw-button label="Ok"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`).bind({});NotificationModal.args={headline:"Set up traffic updates?",description:"Get notified when traffic is impacted along your usual routes. Add your preferred routes and travel times to get started with traffic updates."};const IsOpenModal=(args=>`\n<div>\n    <mw-modal is-open="true">\n        <mw-modal-title headline="${args.headline}" description="${args.description}"></mw-modal-title>\n\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Not now" variant="ghost"></mw-button>\n              <mw-button label="Ok"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`).bind({});IsOpenModal.args={headline:"I pop up automatically!",description:"Get notified when traffic is impacted along your usual routes. Add your preferred routes and travel times to get started with traffic updates."},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n<div>\n    <mw-button\n        id="open-default-modal"\n        label="Open Modal"\n      ></mw-button>\n    <mw-modal\n      trigger="open-default-modal"\n      dismiss-trigger="dismiss-default-modal"\n      backdrop-dismiss="${args.backdropDismiss}"\n      size="${args.size}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-default-modal" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n\n        <div style="display: flex; justify-content: center; align-items: center; background: #C8EBFD; flex-direction: column; height: 200px">\n            <h3 style="font-weight: bold; text-align: center; margin: 0; margin-bottom: 12px;">Slot</h3>\n            <p style="text-align: center; margin: 4px;">This is a placeholder component</p>\n            <p style="text-align: center; margin: 4px;">Replace with your component</p>\n        </div>\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Action 1" variant="ghost"></mw-button>\n              <mw-button label="Action 2"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`',...Default.parameters?.docs?.source}}},ModalTitle.parameters={...ModalTitle.parameters,docs:{...ModalTitle.parameters?.docs,source:{originalSource:'args => `\n<div>\n    <mw-button\n        id="open-modal-title"\n        label="Open Modal with Title"\n      ></mw-button>\n    <mw-modal\n      trigger="open-modal-title"\n      dismiss-trigger="dismiss-modal-title"\n      backdrop-dismiss="${args.backdropDismiss}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-modal-title" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n    </mw-modal>\n</div>`',...ModalTitle.parameters?.docs?.source}}},ModalFooter.parameters={...ModalFooter.parameters,docs:{...ModalFooter.parameters?.docs,source:{originalSource:'args => `\n<div>\n    <mw-button\n        id="open-modal-footer"\n        label="Open Modal with footer"\n      ></mw-button>\n    <mw-modal\n      trigger="open-modal-footer"\n      dismiss-trigger="dismiss-modal-footer"\n      backdrop-dismiss="${args.backdropDismiss}"\n    >\n        <mw-modal-title headline="${args.headline}" description="${args.description}">\n            <mw-icon icon=${args.icon} id="dismiss-modal-footer" size="medium" slot="icon"></mw-icon>\n        </mw-modal-title>\n        <mw-modal-footer>\n            <span slot="start">\n              <mw-button label="Action 1"></mw-button>\n              <mw-button label="Action 2" variant="ghost"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`',...ModalFooter.parameters?.docs?.source}}},NotificationModal.parameters={...NotificationModal.parameters,docs:{...NotificationModal.parameters?.docs,source:{originalSource:'args => `\n<div>\n    <mw-button id="open-notification-modal" label="Open Modal"></mw-button>\n    <mw-modal trigger="open-notification-modal">\n        <mw-modal-title headline="${args.headline}" description="${args.description}"></mw-modal-title>\n\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Not now" variant="ghost"></mw-button>\n              <mw-button label="Ok"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`',...NotificationModal.parameters?.docs?.source}}},IsOpenModal.parameters={...IsOpenModal.parameters,docs:{...IsOpenModal.parameters?.docs,source:{originalSource:'args => `\n<div>\n    <mw-modal is-open="true">\n        <mw-modal-title headline="${args.headline}" description="${args.description}"></mw-modal-title>\n\n        <mw-modal-footer>\n            <span slot="end">\n              <mw-button label="Not now" variant="ghost"></mw-button>\n              <mw-button label="Ok"></mw-button>\n            </span>\n        </mw-modal-footer>\n    </mw-modal>\n</div>`',...IsOpenModal.parameters?.docs?.source}}};const __namedExportsOrder=["Default","ModalTitle","ModalFooter","NotificationModal","IsOpenModal"]},"../node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("../node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"../node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);