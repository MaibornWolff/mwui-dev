{"version":3,"names":["LoginLayoutEnum","mwLoginCss","MwLogin","constructor","hostRef","CENTER","this","togglePasswordType","bind","submitLoginForm","passwordType","formData","email","password","Array","from","loginForm","children","forEach","child","name","value","submit","emit","render","h","Host","class","layout","backgroundImage","src","logo","headline","ref","el","id","type","label","required","icon","slot","onClick","forgotPasswordHref","href","signUpHref","underline"],"sources":["./src/components/mw-login/models/enums/login-layout.enum.ts","./src/components/mw-login/mw-login.scss?tag=mw-login&encapsulation=shadow","./src/components/mw-login/mw-login.tsx"],"sourcesContent":["export enum LoginLayoutEnum {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type LoginLayout = `${LoginLayoutEnum}`;\n",":host {\n  display: block;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.mw-login {\n  display: grid;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  grid-template-areas: \"start end\";\n  grid-template-columns: 50% 50%;\n  align-items: center;\n\n  &--center {\n    grid-template-areas: \"start center end\";\n    grid-template-columns: 30% 40% 30%;\n  }\n\n  .mw-login-background {\n    height: 100%;\n    max-height: 100%;\n\n    &--start {\n      grid-area: end;\n    }\n\n    &--end {\n      grid-area: start;\n    }\n\n    &__image {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .mw-login-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    gap: var(--mw-component-log-in-content-gap-within);\n    background: var(--mw-component-log-in-bg-default);\n    padding: var(--mw-component-log-in-margin-xy);\n    overflow-y: auto;\n    box-sizing: border-box;\n\n    &--start {\n      grid-area: start;\n    }\n\n    &--center {\n      grid-area: center;\n    }\n\n    &--end {\n      grid-area: end;\n    }\n\n    & > * {\n      display: flex;\n      justify-content: center;\n      width: 100%;\n    }\n\n    ::part(button) {\n      width: 100%;\n    }\n\n    #password::part(icon-end) {\n      cursor: pointer;\n    }\n\n    &__headline {\n      font-family: var(--mw-component-log-in-title-font-family);\n      font-weight: var(--mw-component-log-in-title-font-weight);\n      font-size: var(--mw-component-log-in-title-font-size);\n      line-height: var(--mw-component-log-in-title-line-height);\n    }\n\n    &__form {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      gap: var(--mw-component-log-in-content-gap-within);\n\n      #email,\n      #password {\n        width: 100%;\n      }\n    }\n\n    &__user-actions {\n      display: flex;\n      align-items: center;\n\n      .spacefiller {\n        flex: 1 1 auto;\n      }\n\n      mw-link {\n        text-align: right;\n      }\n    }\n\n    &__sign-up {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: var(--mw-component-log-in-sign-up-gap-within);\n      /** TOKENS HERE ARE MISSING */\n      font-family: Poppins;\n      font-size: 16px;\n      line-height: 24px;\n      font-weight: 400;\n      /***/\n    }\n  }\n}\n","import { Component, Event, EventEmitter, h, Host, Prop, State } from \"@stencil/core\";\nimport { LoginLayout, LoginLayoutEnum } from \"./models/enums/login-layout.enum\";\nimport { LoginFormData } from \"./models/interfaces/login-form-data\";\n\n@Component({\n  tag: \"mw-login\",\n  styleUrl: \"./mw-login.scss\",\n  shadow: true,\n})\nexport class MwLogin {\n  private loginForm: HTMLFormElement;\n\n  @State() passwordType: \"password\" | \"text\" = \"password\";\n\n  /**\n   * Headline text\n   */\n  @Prop() headline?: string | undefined;\n  /**\n   * In which layout the Login component should be displayed\n   */\n  @Prop() layout: LoginLayout = LoginLayoutEnum.CENTER;\n\n  /**\n   * URL to the image that should be displayed\n   */\n  @Prop() backgroundImage?: string | undefined;\n\n  /**\n   * URL to the image that should be displayed\n   */\n  @Prop() logo?: string | undefined;\n\n  /**\n   * Wether or not the signUp prompt should be displayed\n   */\n  @Prop() signUpHref?: string;\n\n  /**\n   * Wether or not the forgot password button should be displayed\n   */\n  @Prop() forgotPasswordHref?: string;\n\n  /**\n   * Event emitted after login button was clicked\n   */\n  @Event({\n    bubbles: true,\n    cancelable: false,\n    composed: false,\n  })\n  submit: EventEmitter<LoginFormData>;\n\n  constructor() {\n    this.togglePasswordType = this.togglePasswordType.bind(this);\n    this.submitLoginForm = this.submitLoginForm.bind(this);\n  }\n\n  private togglePasswordType(): void {\n    this.passwordType = this.passwordType === \"text\" ? \"password\" : \"text\";\n  }\n\n  private submitLoginForm(): void {\n    const formData: LoginFormData = {\n      email: \"\",\n      password: \"\",\n    };\n\n    Array.from(this.loginForm.children).forEach((child: HTMLMwTextfieldElement) => {\n      formData[child.name] = child.value;\n    });\n\n    this.submit.emit(formData);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={`mw-login mw-login--${this.layout}`}>\n          {this.backgroundImage && this.layout !== LoginLayoutEnum.CENTER && (\n            <div class={`mw-login-background mw-login-background--${this.layout}`}>\n              <img class=\"mw-login-background__image\" src={this.backgroundImage} />\n            </div>\n          )}\n          <div class={`mw-login-container mw-login-container--${this.layout}`}>\n            {this.logo && (\n              <div class=\"mw-login-container__logo\">\n                <img src={this.logo} />\n              </div>\n            )}\n            {this.headline && <div class=\"mw-login-container__headline\">{this.headline}</div>}\n\n            <form class=\"mw-login-container__form\" ref={el => (this.loginForm = el as HTMLFormElement)}>\n              <mw-textfield id=\"email\" name=\"email\" type=\"email\" label=\"Email address\" required={true}>\n                <mw-icon icon=\"mail\" slot=\"icon-end\"></mw-icon>\n              </mw-textfield>\n\n              <mw-textfield id=\"password\" name=\"password\" type={this.passwordType} label=\"Password\" required={true} helper-text=\"min. 7 characters, 1 upper case, 1 lower case\">\n                <mw-icon icon={this.passwordType === \"text\" ? \"visibility_off\" : \"visibility\"} slot=\"icon-end\" onClick={this.togglePasswordType}></mw-icon>\n              </mw-textfield>\n            </form>\n\n            <div class=\"mw-login-container__user-actions\">\n              <mw-checkbox label=\"Remember me\"></mw-checkbox>\n              <span class=\"spacefiller\"></span>\n              {this.forgotPasswordHref && <mw-link href={this.forgotPasswordHref}>Forgot your password?</mw-link>}\n            </div>\n\n            <mw-button label=\"Log In\" onClick={this.submitLoginForm} id=\"submit\"></mw-button>\n\n            {this.signUpHref && (\n              <div class=\"mw-login-container__sign-up\">\n                Dont't have an account?{\" \"}\n                <mw-link href={this.signUpHref} underline={true}>\n                  Sign up\n                </mw-link>\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;yDAAA,IAAYA,GAAZ,SAAYA,GACVA,EAAA,iBACAA,EAAA,mBACAA,EAAA,YACD,EAJD,CAAYA,MAAe,KCA3B,MAAMC,EAAa,qoE,MCSNC,EAAO,MA4ClBC,YAAAC,G,2DAzC6C,W,oCASfJ,EAAgBK,O,+GAiC5CC,KAAKC,mBAAqBD,KAAKC,mBAAmBC,KAAKF,MACvDA,KAAKG,gBAAkBH,KAAKG,gBAAgBD,KAAKF,K,CAG3CC,qBACND,KAAKI,aAAeJ,KAAKI,eAAiB,OAAS,WAAa,M,CAG1DD,kBACN,MAAME,EAA0B,CAC9BC,MAAO,GACPC,SAAU,IAGZC,MAAMC,KAAKT,KAAKU,UAAUC,UAAUC,SAASC,IAC3CR,EAASQ,EAAMC,MAAQD,EAAME,KAAK,IAGpCf,KAAKgB,OAAOC,KAAKZ,E,CAGnBa,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,sBAAsBrB,KAAKsB,UACpCtB,KAAKuB,iBAAmBvB,KAAKsB,SAAW5B,EAAgBK,QACvDoB,EAAA,OAAKE,MAAO,4CAA4CrB,KAAKsB,UAC3DH,EAAA,OAAKE,MAAM,6BAA6BG,IAAKxB,KAAKuB,mBAGtDJ,EAAA,OAAKE,MAAO,0CAA0CrB,KAAKsB,UACxDtB,KAAKyB,MACJN,EAAA,OAAKE,MAAM,4BACTF,EAAA,OAAKK,IAAKxB,KAAKyB,QAGlBzB,KAAK0B,UAAYP,EAAA,OAAKE,MAAM,gCAAgCrB,KAAK0B,UAElEP,EAAA,QAAME,MAAM,2BAA2BM,IAAKC,GAAO5B,KAAKU,UAAYkB,GAClET,EAAA,gBAAcU,GAAG,QAAQf,KAAK,QAAQgB,KAAK,QAAQC,MAAM,gBAAgBC,SAAU,MACjFb,EAAA,WAASc,KAAK,OAAOC,KAAK,cAG5Bf,EAAA,gBAAcU,GAAG,WAAWf,KAAK,WAAWgB,KAAM9B,KAAKI,aAAc2B,MAAM,WAAWC,SAAU,KAAI,cAAc,iDAChHb,EAAA,WAASc,KAAMjC,KAAKI,eAAiB,OAAS,iBAAmB,aAAc8B,KAAK,WAAWC,QAASnC,KAAKC,uBAIjHkB,EAAA,OAAKE,MAAM,oCACTF,EAAA,eAAaY,MAAM,gBACnBZ,EAAA,QAAME,MAAM,gBACXrB,KAAKoC,oBAAsBjB,EAAA,WAASkB,KAAMrC,KAAKoC,oBAAkB,0BAGpEjB,EAAA,aAAWY,MAAM,SAASI,QAASnC,KAAKG,gBAAiB0B,GAAG,WAE3D7B,KAAKsC,YACJnB,EAAA,OAAKE,MAAM,+BAA6B,0BACd,IACxBF,EAAA,WAASkB,KAAMrC,KAAKsC,WAAYC,UAAW,MAAI,c"}